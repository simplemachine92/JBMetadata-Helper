/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  MetaDataHelper,
  MetaDataHelperInterface,
} from "../MetaDataHelper";

const _abi = [
  {
    inputs: [],
    name: "LENGTH_MISMATCH",
    type: "error",
  },
  {
    inputs: [],
    name: "METADATA_TOO_LONG",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_idToAdd",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "_dataToAdd",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_originalMetadata",
        type: "bytes",
      },
    ],
    name: "addToMetadata",
    outputs: [
      {
        internalType: "bytes",
        name: "_newMetadata",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4[]",
        name: "_ids",
        type: "bytes4[]",
      },
      {
        internalType: "bytes[]",
        name: "_metadatas",
        type: "bytes[]",
      },
    ],
    name: "createMetadata",
    outputs: [
      {
        internalType: "bytes",
        name: "_metadata",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_id",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "_metadata",
        type: "bytes",
      },
    ],
    name: "getMetadata",
    outputs: [
      {
        internalType: "bytes",
        name: "_targetMetadata",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

export class MetaDataHelper__factory {
  static readonly abi = _abi;
  static createInterface(): MetaDataHelperInterface {
    return new utils.Interface(_abi) as MetaDataHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MetaDataHelper {
    return new Contract(address, _abi, signerOrProvider) as MetaDataHelper;
  }
}
